[general]

# This variable specifies which accounts are defined. Separate them with commas.
# Account names should be alphanumeric only. You will need to specify one
# section per account below. You may not use "general" for an account name.
#
# Always use ASCII characters only.
#
accounts = GFXpro,Uni,Privat

# to use the same encrypted password file as emacs
#pythonfile = ~/.offlineimap.py

[Account Uni]

# These settings specify the two folders that you will be syncing.
# You'll need to have a "Repository ..." section for each one.

localrepository = LocalUni
remoterepository = RemoteUni

[Account GFXpro]

# These settings specify the two folders that you will be syncing.
# You'll need to have a "Repository ..." section for each one.

localrepository = LocalGFXpro
remoterepository = RemoteGFXpro

[Account Privat]

# These settings specify the two folders that you will be syncing.
# You'll need to have a "Repository ..." section for each one.

localrepository = LocalPrivat
remoterepository = RemotePrivat

[Repository LocalUni]

# Each repository requires a "type" declaration. The types supported for
# local repositories are Maildir, GmailMaildir and IMAP.
#
type = Maildir


# This option stands in the [Repository LocalExample] section.
#
# Specify local repository.  Your IMAP folders will be synchronized
# to maildirs created under this path.  OfflineIMAP will create the
# maildirs for you as needed.
#
localfolders = ~/Mail/Uni

[Repository LocalGFXpro]

# Each repository requires a "type" declaration. The types supported for
# local repositories are Maildir, GmailMaildir and IMAP.
#
type = Maildir


# This option stands in the [Repository LocalExample] section.
#
# Specify local repository.  Your IMAP folders will be synchronized
# to maildirs created under this path.  OfflineIMAP will create the
# maildirs for you as needed.
#
localfolders = ~/Mail/GFXpro

[Repository LocalPrivat]

# Each repository requires a "type" declaration. The types supported for
# local repositories are Maildir, GmailMaildir and IMAP.
#
type = Maildir


# This option stands in the [Repository LocalExample] section.
#
# Specify local repository.  Your IMAP folders will be synchronized
# to maildirs created under this path.  OfflineIMAP will create the
# maildirs for you as needed.
#
localfolders = ~/Mail/Privat


[Repository RemoteUni]

# The remote repository.  We only support IMAP or Gmail here.
#
type = IMAP

# Specify the remote hostname.
#
remotehost = imap.informatik.uni-kiel.de


# Whether or not to use SSL.
#
# Note: be care to configure the 'remotehost' line with the domain name defined
# in the certificate. E.g., if you trust your provider and want to use the
# certificate it provides on a shared server. Otherwise, OfflineIMAP will stop
# and say that the domain is not named in the certificate.
#
ssl = yes

# SSL CA Cert(s) to verify the server cert against (optional).
# No SSL verification is done without this option. If it is
# specified, the CA Cert(s) need to verify the Server cert AND
# match the hostname (* wildcard allowed on the left hand side)
# The certificate should be in PEM format.
#
# Tilde and environment variable expansions will be performed.
#
# Special value OS-DEFAULT makes OfflineIMAP to automatically
# determine system-wide location of standard trusted CA roots file
# for known OS distributions and use the first bundle encountered
# (if any).  If no system-wide CA bundle is found, OfflineIMAP
# will refuse to continue; this is done to prevent creation
# of false security expectations ("I had configured CA bundle,
# thou certificate verification shalt be present").
#
# You can also use fingerprint verification via cert_fingerprint.
# See below for more verbose explanation.
#
# get with:
# $ openssl s_client -CApath /etc/ssl/certs -connect ${hostname}:imaps -showcerts | perl -ne 'print if /BEGIN/../END/; print STDERR if /return/' > $sslcacertfile
#sslcacertfile = uni-imap.cert
cert_fingerprint = 444e26ea42f16308f1447c0eb3afaf4d46e845c3a39b1e3b6a458c7edf3522378d00ae9c82509d6dba502b50e4b435a0164c40f07c23dc69fdf2fc2a66924177


# Specify the remote user name.
#
remoteuser = svk
#remotepasseval = get_password_emacs("imap.informatik.uni-kiel.de", 993)    

########## Passwords

# There are six ways to specify the password for the IMAP server:
#
# 1. No password at all specified in the config file.
#    If a matching entry is found in ~/.netrc (see netrc (5) for
#    information) this password will be used. Do note that netrc only
#    allows one entry per hostname. If there is no ~/.netrc file but
#    there is an /etc/netrc file, the password will instead be taken
#    from there. Otherwise you will be prompted for the password when
#    OfflineIMAP starts when using a UI that supports this.

[Repository RemoteGFXpro]

type = IMAP
remotehost = mail.jpberlin.de
ssl = yes
#sslcacertfile = ~/.dotfiles/certs/jpberlin.cert
cert_fingerprint = b7859db422b4a44f188668c8aae256230220143e289cae2677a230b2e70d4f8a7321168dd868db2ff103bb9b95b61ca51ea748aae977f24f9abb26eecc8c0cf3
remoteuser = s.koschnicke@gfxpro.com
#remotepasseval = get_password_emacs("mail.jpberlin.de", 993)    


[Repository RemotePrivat]

type = IMAP
remotehost = sslin.df.eu
ssl = yes
sslcacertfile = /home/sven/.dotfiles/certs/sslin.df.eu.cer

#cert_fingerprint = 7dda4982e4c87209d866f273faac21244c523ab3
remoteuser = sven@koschnicke.de
#remotepasseval = get_password_emacs("sslin.df.eu", 993)    
